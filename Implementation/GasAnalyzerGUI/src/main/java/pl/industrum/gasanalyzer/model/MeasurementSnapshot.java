package pl.industrum.gasanalyzer.model;

// default package
// Generated 2013-05-07 14:42:04 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.Vector;

/**
 * MeasurementSnapshot generated by hbm2java
 */
@SuppressWarnings( { "rawtypes", "serial" } )
public class MeasurementSnapshot implements java.io.Serializable
{

	private int id;
	private Date timestamp;
	private SurveySection surveySection;
	private Survey survey;
	private String comment;
	private Set measurementSets = new HashSet( 0 );

	public MeasurementSnapshot()
	{
	}

	public MeasurementSnapshot( int id, SurveySection surveySection,
			Survey survey )
	{
		this.id = id;
		this.surveySection = surveySection;
		this.survey = survey;
	}

	public MeasurementSnapshot( int id, SurveySection surveySection,
			Survey survey, String comment, Set measurementSets )
	{
		this.id = id;
		this.surveySection = surveySection;
		this.survey = survey;
		this.comment = comment;
		this.measurementSets = measurementSets;
	}

	public int getId()
	{
		return this.id;
	}

	public void setId( int id )
	{
		this.id = id;
	}

	public Date getTimestamp()
	{
		return this.timestamp;
	}

	public void setTimestamp( Date timestamp )
	{
		this.timestamp = timestamp;
	}

	public SurveySection getSurveySection()
	{
		return this.surveySection;
	}

	public void setSurveySection( SurveySection surveySection )
	{
		this.surveySection = surveySection;
	}

	public Survey getSurvey()
	{
		return this.survey;
	}

	public void setSurvey( Survey survey )
	{
		this.survey = survey;
	}

	public String getComment()
	{
		return this.comment;
	}

	public void setComment( String comment )
	{
		this.comment = comment;
	}

	public Set getMeasurementSets()
	{
		return this.measurementSets;
	}
	
	public Vector<MeasurementSet> getMeasurementSetsSorted()
	{
		HashMap<Integer, MeasurementSet> newSets = new HashMap<Integer, MeasurementSet>();
		for( Object measurementSet: getMeasurementSets().toArray() )
		{
			newSets.put( ( ( MeasurementSet) measurementSet ).getDevice().getAddress(), (MeasurementSet)measurementSet );
		}
		
		SortedSet<Integer> keys = new TreeSet<Integer>( newSets.keySet() );
		Vector<MeasurementSet> measurementSetsObjectsVector = new Vector<MeasurementSet>();
		for (Integer key : keys)
		{ 
			measurementSetsObjectsVector.add( newSets.get(key) );
		}
		
		return measurementSetsObjectsVector;
	}

	public void setMeasurementSets( Set measurementSets )
	{
		this.measurementSets = measurementSets;
	}

}
